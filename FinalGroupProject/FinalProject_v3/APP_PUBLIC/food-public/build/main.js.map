{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.module.ts","./src/app/food-list/food-list.component.ts","./src/app/food-list/food-list.component.html","./src/app/food-service.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\n//import { AppComponent } from './app.component';\nimport { FoodListComponent } from './food-list/food-list.component';\n\n@NgModule({\n  declarations: [\n    //AppComponent,\n    FoodListComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [FoodListComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Food} from '../food';\nimport { FoodServiceService} from \"../food-service.service\";\n\n@Component({\n  selector: 'app-food-list',\n  templateUrl: './food-list.component.html',\n  styleUrls: ['./food-list.component.css'],\n  providers: [FoodServiceService]\n})\n\nexport class FoodListComponent implements OnInit {\n  foods: Food[];\n\n  constructor(private foodService: FoodServiceService) { }\n\n  ngOnInit(): void {\n    this.foodService.getFoods()\n    .then((foods: Food[])=>{this.foods = foods.map(food =>{return food;\n    });\n  });\n}\n\n}\n","<p>food-list works!</p>\n<ul>\n    <li *ngFor = 'let food of foods;'>{{food.name}}</li>\n</ul>","import { Injectable } from '@angular/core';\nimport { Food} from './food';\nimport { HttpClient, HttpResponse} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class FoodServiceService {\n\n  private foodsUrl  = 'http://localhost:3000/api/foods';\n  constructor(private http:HttpClient) {  }\n\n  getFoods() : Promise<void | Food[]>{return this.http.get(this.foodsUrl).toPromise()\n    .then(response => response as Food[]).catch(this.handleError);\n  }\n    private handleError(error: any)\n    {console.log(\"error\");\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}